version: 2

rails: &rails
  working_directory: ~/ruby-on-rails-repo-template
  docker:
    - image: circleci/ruby:2.6.3-node-browsers
      environment:
        BUNDLE_JOBS: 3
        BUNDLE_RETRY: 3
        BUNDLE_PATH: vendor/bundle
        PGHOST: 127.0.0.1
        PGUSER: circleci
        RAILS_ENV: test
        NODE_ENV: development
    - image: circleci/postgres:9.6.6-alpine
      environment:
        POSTGRES_USER: circleci
        POSTGRES_DB: ruby-on-rails-repo-template_test
        POSTGRES_PASSWORD: ""
    - image: redis:4.0.1

build_steps:
  - &bundle_restore_cache
    restore_cache:
      keys:
        - ruby-on-rails-repo-template{{ checksum "Gemfile.lock" }}
        - ruby-on-rails-repo-template

  - &bundle_install
    run:
      name: Bundle Install
      command: bundle check --path vendor/bundle || bundle install --deployment

  - &bundle_save_cache
    save_cache:
      key: ruby-on-rails-repo-template{{ checksum "Gemfile.lock" }}
      paths:
        - vendor/bundle

  - &install_yarn
    run:
      name: Update Yarn to Latest
      command: sudo npm install -g yarn

  - &yarn_restore_cache
    restore_cache:
      keys:
        - ruby-on-rails-repo-template-yarn{{ checksum "yarn.lock" }}
        - ruby-on-rails-repo-template-yarn

  - &yarn_install
    run:
      name: Yarn Install
      command: yarn install --frozen-lockfile

  - &yarn_save_cache
    save_cache:
      key: ruby-on-rails-repo-template-yarn{{ checksum "yarn.lock" }}
      paths:
        - ~/.cache/yarn

  - &database_create
    run:
      name: Database create
      command: bin/rails db:create

  - &database_setup
    run:
      name: Database setup
      command: bin/rails db:schema:load --trace

  - &setup_code_climate
    run:
      name: Setup Code Climate test-reporter
      command: |
        curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        chmod +x ./cc-test-reporter

  - &run_test_cc
    run:
      name: Run Tests
      command: |
        ./cc-test-reporter before-build
        bundle exec rake test
        ./cc-test-reporter after-build
      when: always

  - &run_test_chrome_test
    run:
      name: Run Tests
      command: bin/rails test:chrome
      when: always

  - &run_test_firefox_test
    run:
      name: Run Tests
      command: bin/rails test:firefox
      when: always

  - &store_coverage
    # collect reports
    store_artifacts:
      path: coverage
      destination: coverage

  - &store_test_results
    store_test_results:
      path: test/reports

jobs:
  build:
    <<: *rails
    steps:
      - checkout
      - *bundle_restore_cache
      - *bundle_install
      - *bundle_save_cache
      - *install_yarn
      - *yarn_restore_cache
      - *yarn_install
      - *yarn_save_cache
      - *database_create
      - *database_setup

  test:
    <<: *rails
    steps:
      - checkout
      - *bundle_restore_cache
      - *bundle_install
      - *bundle_save_cache
      - *install_yarn
      - *yarn_restore_cache
      - *yarn_install
      - *yarn_save_cache
      - *database_create
      - *database_setup
      - *setup_code_climate
      - *run_test_cc
      - *store_coverage
      - *store_test_results

  test_chrome:
    <<: *rails
    steps:
      - checkout
      - *bundle_restore_cache
      - *bundle_install
      - *bundle_save_cache
      - *install_yarn
      - *yarn_restore_cache
      - *yarn_install
      - *yarn_save_cache
      - *database_create
      - *database_setup
      - *run_test_chrome_test
      - *store_coverage
      - *store_test_results

  test_firefox:
    <<: *rails
    steps:
      - checkout
      - *bundle_restore_cache
      - *bundle_install
      - *bundle_save_cache
      - *install_yarn
      - *yarn_restore_cache
      - *yarn_install
      - *yarn_save_cache
      - *database_create
      - *database_setup
      - *run_test_firefox_test
      - *store_coverage
      - *store_test_results

workflows:
  version: 2
  build_accept_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - test_chrome:
          requires:
            - build
            - test
      - test_firefox:
          requires:
            - build
            - test
      # - deploy:
      #     requires:
      #       - chrome_desktop
      #       - firefox_desktop
